install.packages("KernSmooth")
library(KernSmooth)
install.packages("devtools")
pos = 0.1*0.9+0.99*0.1
(0.9*0.01)/pos
(0.9*0.01)/pos
pos = 0.01*0.9+0.99*0.1
(0.9*0.01)/pos
0.5^4
pos=0.5^4*0.9 + 0.1*0.9^4
0.9*0.0625/pos
data(iris)
head(iris)
boxplot(data=iris)
boxplot(Sepal.length~Species,data=iris)
boxplot(Sepal.Length~Species,data=iris)
boxplot(Sepal.Length~Species,data=iris,notch=true)
boxplot(Sepal.Length~Species,data=iris,notch=TRUE)
col=c("blue","green",red)
col=c("blue","green","red")
boxplot(Sepal.Length~Species,data=iris,notch=TRUE)
boxplot(Sepal.Length~Species,data=iris,notch=TRUE, col=c("blue","green","red"))
data(mtcars)
head(mtcars)
hist(mtcars$mpg, breaks=12)
hist(mtcars$mpg, breaks=12, color="red")
hist(mtcars$mpg, breaks=12, col="red")
hist(mtcars$mpg, breaks=12, col="red")
d<-density(mtcars$mpg)
plot(d)
polygon(d)
polygon(d,col="red",bprder="blue")
polygon(d,col="red",border="blue")
install.packages("sm")
library(sm)
Sys.time()
x = Sys.time()
p = as.POSIXlt(x)
p
x
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
mean(c(190,170,165,180,165))
mean(c(2400,125,148,160,110,325,180))
mean(c(4,3,32,33,4,32,3,38,4))
mean(c(5,9,100,9,97,6,9,98,9))
x =c(3,9,3,8,2,9,1,9,2,4)
mean(x)
median(x)
mode(x)
mean(c(7,28,4,23,18\))
mean(c(7,28,4,23,18))
mean(c(7,38,4,23,18))
sum(c(121,400,196,25,0))/5
x = c(3,4,5,6,7)
mean(x)
var(x)
std(x)
sd(x)
sqrt(4)
sqrt(var(x))
?var
x
var(x)
str(x)
sd(c)
sd(x)
mean(x)
(25+100+100+25)/5
sqrt(50)
a=c(25+100+100+25)
a
a = c(15,20,25,30,35)
var(A)
var(a)
sd(a)
t(A)
t(a)
var(t(a))
?read.csv
concast("abc",1)
concat("abc",1)
s = "asv" + 2
paste("abc",1)
paste("abc",1)
paste("abc",1,sep="")
getdw
getdw()
getwd()
a = read.csv("r//1.csv",header=T)
a = read.csv("r\\1.csv",header=T)
a = read.csv("r\\specdata\\1.csv",header=T)
a = read.csv("r\\specdata\\001.csv",header=T)
a = read.csv("r//specdata//001.csv",header=T)
a = read.csv("r\\specdata\\001.csv",header=T)
a = read.csv("E:\\SkyDrive\\Documents\\r\\specdata\\001.csv",header=T)
str(a)
getwd()
a = c(NA,0,1,NA)
a
is.na(c)
str(a)
?mean
f = read.csv("E:\\SkyDrive\\Documents\\r\\specdata\\001.csv",header=T)
data = c()
data = c(data, f$sulfate)
data
mean(data,na.rm=TRUE)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
data = c()
for(f in id)
{
filname = paste(c(directory,"\\00",id,".csv"),sep="")
f = read.csv(file=filename,header=TRUE)
if(pollutant == "sulfate")
{
data = c(data, f$sulfate)
}else
{
data = c(data, f$nitrate)
}
}
mean(data, na.rm=TRUE)
}
pollutantmean("r//specdata",sulfate,1)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
data = c()
for(f in id)
{
filename = paste(c(directory,"\\00",id,".csv"),sep="")
f = read.csv(file=filename,header=TRUE)
if(pollutant == "sulfate")
{
data = c(data, f$sulfate)
}else
{
data = c(data, f$nitrate)
}
}
mean(data, na.rm=TRUE)
}
pollutantmean("r//specdata",sulfate,1)
getwd()
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
## Write a short comment describing this function
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
b = c(1:4)
makeVector(b)
cachemean(b)
b1 = makeVector(b)
cachemean(b1)
q()
a = url("http://biostat.jhsph.edu/~jleek/contact.html")
a
nchar(a)
d = read.fwf(Downloads\\getdata-wksst8110.for)
d = read.fwf(Downloads//getdata-wksst8110.for)
d = read.fwf(C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for)
d = read.fwf("C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for")
d = read.fwf("C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for", width=13,header=TRUE)
head(d)
str(d)
d = read.fwf("C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for", width=13,header=TRUE)
head(d)
?read.fwf
d = read.fwf("C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for", width=13,header=TRUE,sep=" ")
d = read.fwf("C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",header=TRUE,sep=" ")
d = read.fwf("C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=c(16,29,42,55,63), header=TRUE)
d = read.fwf("C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=c(16,29,42,55), header=TRUE)
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=c(16,29,42,55), header=TRUE)
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=c(16,29,42,55,63), header=TRUE)
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=55, header=TRUE)
d
str(d)
d$Week..........SST.SSTA.....SST.SSTA.....SST.SSTA.....SST.SSTA
d[1]
d[[1]]
d[[1]][2]
d
sum(d)
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=55, header=TRUE,sep=" ")
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=63, header=TRUE,sep=" ")
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=63,sep=" ")
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=55,sep=" ")
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=55,sep="\t")
d
str(d)
d = read.fwf(file="C:\\Users\\Piotr\\Downloads\\getdata-wksst8110.for",widths=62,sep="\t")
d
str(d)
?split
a = split(d," ")
a
str(a)
d$V1
str(d$V1)
str(d$V1[1])
str(d$V1[[1]])
d[1]
d[[1]]
d[[1]][1]
d[[1]][2]
d[[1]][[2]]
d[[1]][[1]]
as.vector(d[[1]][[1]])
as.list(d[[1]][[1]])
as.char(d[[1]][[1]])
as?
)dsf
''
strsplit((d[[1]][[1]])," ")
strsplit(as.char(d[[1]][[1]])," ")
strsplit(as.character(d[[1]][[1]])," ")
?fix
10!
factorial(3)
factorial(10)/(factorial(5)^2)
125*124*123/factorial(3)
3*0.8*0.2*0.2
5*0.2*0.8^4
10*0.2^2*0.8^3
factorial(12)/(factorial(9)*factorial(3))*0.8^9*0.2^3
?device
windows()
dev.copy2pdf()
?par
wd
rwd
rwd()
getwd()
setwd("Q:\Nauka po studiach\Kursy online\Reproducible Research\Assigment1\RepData_PeerAssessment1")
setwd("Q:\\Nauka po studiach\\Kursy online\\Reproducible Research\\Assigment1\\RepData_PeerAssessment1")
getwd()
?unzip
unzip("activity.zip")
unzip("activity.zip")
data = read.scv("activity.csv")
data = read.csv("activity.csv")
summary(data)
str(data)
head(data)
data
